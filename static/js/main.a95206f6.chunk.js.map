{"version":3,"sources":["assets/sprite.svg","components/404/index.tsx","hooks/useCurrentLocation.tsx","components/currentWeather/description/description__card/descriptionList/descriptionListItem/index.tsx","components/currentWeather/description/description__card/descriptionList/index.tsx","components/currentWeather/description/description__card/ImageField/index.tsx","components/currentWeather/description/description__card/TemperatuteField/index.tsx","components/currentWeather/description/description__card/index.tsx","components/currentWeather/description/description__header/index.tsx","components/currentWeather/description/index.tsx","components/currentWeather/header/index.tsx","components/currentWeather/search/searchBox/index.tsx","components/currentWeather/search/radioBox/radioItems/index.tsx","components/currentWeather/search/radioBox/index.tsx","store/types.tsx","store/actions.tsx","components/currentWeather/search/index.tsx","components/spinner/index.tsx","components/currentWeather/index.tsx","components/dots/index.tsx","components/hourlyForecast/forecastHeader/index.tsx","components/hourlyForecast/forecastList/forecastListItem/cityField/index.tsx","components/hourlyForecast/forecastList/forecastListItem/imageField/index.tsx","components/hourlyForecast/forecastList/forecastListItem/dateField/index.tsx","components/hourlyForecast/forecastList/forecastListItem/dataListField/dataListFieldItem/index.tsx","components/hourlyForecast/forecastList/forecastListItem/dataListField/index.tsx","components/hourlyForecast/forecastList/forecastListItem/index.tsx","components/loader/index.tsx","components/hourlyForecast/forecastList/index.tsx","components/hourlyForecast/index.tsx","constant/option.tsx","constant/defaultCoords.tsx","constant/quantityOfDots.tsx","components/main/index.tsx","App.tsx","reportWebVitals.ts","store/weatherReducer.tsx","store/rootReducer.tsx","services/requestCurrentWeather.tsx","services/requestWeatherByCity.tsx","store/sagas/firstLoadingSaga.tsx","store/sagas/updateDataSaga.tsx","store/sagas/updateWeatherCardsCitySaga.tsx","services/requestNearbyCities.tsx","store/sagas/updateWeatherCardsNearbySaga.tsx","index.tsx"],"names":["FourHundredFour","Container","MessageMain","Icon","href","sprite","MessageAdditional","styled","div","h4","svg","p","useCurrentLocation","options","useState","location","setLocation","error","setError","handleSuccess","pos","coords","lat","latitude","lon","longitude","handleError","message","useEffect","geolocation","navigator","getCurrentPosition","DescriptionListItem","firstFieldName","secondFieldName","rotate","value","toFixed","String","fromCharCode","Date","toLocaleTimeString","ListItem","style","transform","li","DescriptionList","title","dataPosition","useSelector","state","weather","temperatureArray","sunArray","windArray","visibilityArray","cloudArray","Object","entries","main","filter","item","sys","wind","clouds","List","Title","map","index","ul","ImageField","icon","text","Wrapper","Text","maxWidth","src","alt","TemperatuteField","temp","Field","DescriptionCard","Card","DescriptionHeader","date","dt","name","toLocaleDateString","now","Header","Description","data-text","h1","SearchBox","memo","valueOfField","changeValue","Input","placeholder","onChange","event","target","Button","type","input","button","RadioItem","forLabel","forId","id","check","trueInfo","Label","htmlFor","checked","bind","disabled","Span","label","span","RadioBox","info","change","Line","RECORD_POSITION","RECORD_CITY","RECORD_LASTCITY","RECORD_LASTCOORDS","UPDATED_DATA","TRUE_DATA","FALSE_DATA","REQUEST_WEATHER","UPDATE_WEATHER_CITY_CARDS","UPDATE_WEATHER_NEARBY_CARDS","RECORD_TYPEREQUEST","SHOW_LOADINGCARDS","HIDE_LOADINGCARDS","SHOW_LOADER","HIDE_LOADER","recordDataPosition","data","payload","recordCity","city","recordLastCity","recordLastCoords","updateData","updatedWeatherNearbyCards","trueData","falseData","showLoadingCards","hideLoadingCards","showFormLoader","hideFormLoader","SearchForm","typeRequset","lastCoords","lastCity","dispatch","useDispatch","setValue","radioValue","setRadioValue","update","useCallback","submitHandler","preventDefault","trim","radio","Form","onSubmit","form","Spinner","SpinnerBlock","Loader","keyframes","CurrentWeather","loadingMain","loadingForm","Content","Dots","move","ForecastHeader","header","h2","CityField","innerData","h3","description","figure","figcaption","DateField","toLocaleString","dateTime","DataListFieldItem","nameOfFields","DataListField","innerHeaderField","innerItemFieldArray","ListHeader","ForecastListItem","cityData","dateData","imageData","values","Cards","length","Circle","animation","ForecastList","dataCity","loadingCards","quantityOfCards","list","slice","MainList","HourlyForecast","geolocationOptions","enableHighAccuracy","timeout","maximumAge","defaultCoords","dots","array","push","MainPage","currentLocation","targetLoaction","useMemo","Background","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","API_key","URL","delay","ms","Promise","resolve","setTimeout","getWeather","a","fetch","response","json","result","console","getWet","sagaWatcher","sagaWorker","takeEvery","put","call","position","cod","log","updateDataWatcher","updateWorker","updatedCoords","coord","updateCityCardsWatcher","updateCityWorker","getNearbyCities","updateNearbyCardsWatcher","updateNearbyWorker","Global","createGlobalStyle","WebFont","load","google","families","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a95206f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprite.bffd5d7d.svg\";","import React from 'react';\r\nimport sprite from \"../../assets/sprite.svg\";\r\nimport styled from 'styled-components';\r\n\r\nexport const FourHundredFour: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <MessageMain>Page not found</MessageMain>\r\n            <div>\r\n                <Icon>\r\n                    <use href={sprite + \"#404\"}></use>\r\n                </Icon>\r\n            </div>\r\n            <MessageAdditional>\r\n                This city does not exist, check the name of the city and make a second request\r\n            </MessageAdditional>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\ntransform: translate(-50%, -50%);\r\nwidth: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst MessageMain = styled.h4`\r\nposition: relative;\r\nfont-size: 1.5em;\r\nline-height: 1em;\r\nmargin-bottom: 20px;\r\ncolor: #15222c;\r\nbackground: #fff;\r\nfont-weight: 300;\r\npadding: 10px 20px;\r\ndisplay: inline-block;\r\n`;\r\n\r\nconst Icon = styled.svg`\r\nwidth: 250px;\r\nheight: 150px;\r\n`;\r\n\r\nconst MessageAdditional = styled.p`\r\ncolor: #fff;\r\nfont-size: 1.2em;\r\n`;","import { useState, useEffect } from \"react\";\r\nimport { ICoords } from \"../models/coords.model\";\r\nimport { IOptions } from \"../models/options.model\";\r\n\r\nconst useCurrentLocation = (options: IOptions): { location: ICoords | undefined, error: string | undefined } => {\r\n\r\n  const [location, setLocation] = useState<ICoords>();\r\n  const [error, setError] = useState<string>();\r\n\r\n  const handleSuccess = (pos : GeolocationPosition): void => {\r\n    const { latitude:lat, longitude:lon } = pos.coords;\r\n\r\n    setLocation({\r\n      lat,\r\n      lon,\r\n    });\r\n  };\r\n\r\n  const handleError = (error: GeolocationPositionError): void => {\r\n    setError(error.message);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { geolocation } = navigator;\r\n\r\n    if (!geolocation) {\r\n      setError(\"Geolocation is not supported.\");\r\n      return;\r\n    }\r\n\r\n    geolocation.getCurrentPosition(handleSuccess, handleError, options);\r\n  }, [options]);\r\n  \r\n  return { location, error };\r\n};\r\n\r\nexport default useCurrentLocation;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport sprite from \"../../../../../../assets/sprite.svg\";\r\n\r\ntype ValueProps = {\r\n    value : [string, number]\r\n}\r\n\r\nexport const DescriptionListItem: React.FC<ValueProps> = ({value}: ValueProps) => {\r\n    let firstFieldName: string;\r\n    let secondFieldName! : string;\r\n    let rotate!: string;\r\n    \r\n    switch (value[0]) {\r\n        case 'feels_like':\r\n            firstFieldName = 'Feels like';\r\n            secondFieldName = `${value[1].toFixed(1)} ` + String.fromCharCode(8451);\r\n        break;\r\n        case 'temp_min':\r\n            firstFieldName = 'Minimum';\r\n            secondFieldName = `${value[1].toFixed(1)} ` + String.fromCharCode(8451);\r\n        break;\r\n        case 'temp_max':\r\n            firstFieldName = 'Maximum'\r\n            secondFieldName = `${value[1].toFixed(1)} ` + String.fromCharCode(8451);\r\n        break;\r\n        case 'pressure':\r\n            firstFieldName = 'Pressure';\r\n            secondFieldName = `${value[1]} ` + String.fromCharCode(13169);\r\n        break;\r\n        case 'humidity': \r\n            firstFieldName = 'Humidity';\r\n            secondFieldName = `${value[1]} ` + String.fromCharCode(37);\r\n        break;\r\n        case 'speed': \r\n            firstFieldName = 'Speed';\r\n            secondFieldName = `${value[1]} (m/s)`;\r\n        break;\r\n        case 'sunrise': \r\n            firstFieldName = 'Sunrise';\r\n            secondFieldName = new Date(value[1] * 1000).toLocaleTimeString();\r\n        break;\r\n        case 'sunset': \r\n            firstFieldName = 'Sunset';\r\n            secondFieldName = new Date(value[1] * 1000).toLocaleTimeString();\r\n        break;\r\n        case 'deg': \r\n            firstFieldName = 'Direction';\r\n            rotate = `rotateZ(${value[1]}deg)`;\r\n        break;\r\n        case 'all': \r\n            firstFieldName = 'Clouds';\r\n            secondFieldName = `${value[1]} ` + String.fromCharCode(37);\r\n        break;\r\n        case 'visibility': \r\n            firstFieldName = 'Visibility';\r\n            secondFieldName = `${value[1]} (m)`;\r\n        break;\r\n        default: firstFieldName = 'Unknown status'\r\n        break;\r\n    }\r\n\r\n    return (\r\n    <ListItem>\r\n        <span>{firstFieldName}</span>\r\n        <span>{firstFieldName === 'Direction' ? <Icon style={{transform: rotate}}><use href={sprite + \"#arrow\"}></use></Icon> : secondFieldName}</span>\r\n    </ListItem>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ListItem = styled.li`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\nfont-size: 1.1rem;\r\n`;\r\n\r\nconst Icon = styled.svg`\r\nwidth: 10px;\r\nheight: 10px;\r\n`;","import React from 'react';\r\nimport { DescriptionListItem } from './descriptionListItem';\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../store/rootReducer';\r\n\r\ntype TitleProps = {\r\n    title: string\r\n}\r\n\r\ntype ArrayKey = [string, number]\r\n\r\nexport const DescriptionList: React.FC<TitleProps> = ({ title }: TitleProps) => {\r\n    const dataPosition = useSelector((state: RootState) => state.weather.dataPosition);\r\n\r\n    let temperatureArray: any = [];\r\n    let sunArray: any = [];\r\n    let windArray: any = [];\r\n    let visibilityArray: any = [];\r\n    let cloudArray: any = [];\r\n\r\n    if (dataPosition) {\r\n        switch (title) {\r\n            case 'Temperature parameters':\r\n                temperatureArray = Object.entries(dataPosition.main).filter((item) => item[0] !== 'temp' && item[0] !== 'sea_level' && item[0] !== 'grnd_level' && item[0] !== 'pressure');\r\n                break;\r\n            case 'Sunrise & Sunset data':\r\n                sunArray = Object.entries(dataPosition.sys).filter((item) => item[0] !== 'country' && item[0] !== 'id' && item[0] !== 'type');\r\n                break;\r\n            case 'Visibility':\r\n                visibilityArray = Object.entries(dataPosition).filter((item) => item[0] === 'visibility');\r\n                break;\r\n            case 'Wind':\r\n                windArray = Object.entries(dataPosition.wind).filter((item) => item[0] !== 'gust');\r\n                break;\r\n            case 'Cloudiness':\r\n                cloudArray = Object.entries(dataPosition.clouds)\r\n                break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <List>\r\n            <Title>{title}</Title>\r\n            {temperatureArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n            {sunArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n            {visibilityArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n            {windArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n            {cloudArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nconst List = styled.ul`\r\ndisplay: grid;\r\ngrid-column: 100%;\r\ngrid-template-rows: min-content;\r\ngrid-gap: 5px;\r\n`;\r\n\r\nconst Title = styled.li`\r\ntext-align: center;\r\nfont-weight: 500;\r\nfont-size: 1.2rem;\r\ncolor: #171730;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\nimport { RootState } from '../../../../../store/rootReducer';\r\n\r\nexport const ImageField: React.FC = () => {\r\n    const dataPosition = useSelector((state: RootState) => state.weather.dataPosition);\r\n    const icon: string | undefined = dataPosition?.weather[0].icon;\r\n    const text: string | undefined = dataPosition?.weather[0].main;\r\n    \r\n    return (\r\n        <Wrapper>\r\n            <Text>{text}</Text>\r\n            <img style={{maxWidth: `100%`}} src={icon ? `http://openweathermap.org/img/wn/${icon}@2x.png` : ''} alt=\"icon\"/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\njustify-content: space-evenly;\r\n`;\r\n\r\nconst Text = styled.p`\r\nfont-size: 1.2rem;\r\ncolor: #000;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\nimport { RootState } from '../../../../../store/rootReducer';\r\n\r\n\r\nexport const TemperatuteField: React.FC = () => {\r\n    const dataPosition = useSelector((state: RootState) => state.weather.dataPosition);\r\n    const temp: number | undefined = dataPosition?.main.temp;\r\n    \r\n    return (\r\n        <Field>{temp?.toFixed(1)}&#8451;</Field>\r\n    )\r\n}\r\n\r\nconst Field = styled.p`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\ncolor: #171730;\r\nfont-size: 3rem;\r\nfont-weight: 700;\r\n`;\r\n","import React from 'react';\r\nimport { DescriptionList } from './descriptionList';\r\nimport { ImageField } from './ImageField';\r\nimport { TemperatuteField } from './TemperatuteField';\r\nimport styled from 'styled-components'\r\n\r\nexport const DescriptionCard: React.FC = () => {\r\n    const titleList: Array<string> = ['Temperature parameters','Sunrise & Sunset data','Visibility','Wind','Cloudiness'];\r\n\r\n    return (\r\n        <Card>\r\n            <ImageField/>\r\n            <TemperatuteField/>\r\n            {titleList.map((item: string, index: number) => <DescriptionList key={index} title={item}/>)}\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst Card = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 100%;\r\ngrid-template-rows: min-content;\r\ngrid-gap: 5px;\r\n`;\r\n\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\nimport { RootState } from '../../../../store/rootReducer';\r\n\r\nexport const DescriptionHeader: React.FC = () => {\r\n    const dataPosition = useSelector((state: RootState) => state.weather.dataPosition);\r\n    const date : number | undefined = dataPosition?.dt;\r\n    \r\n    return (\r\n    <Header>\r\n        <p>{dataPosition?.name}</p>\r\n        <p>{date ? new Date(date * 1000).toLocaleDateString() : Date.now()}</p>\r\n    </Header>\r\n    )\r\n}\r\n\r\nconst Header = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-content: center;\r\njustify-content: space-between;\r\nfont-size: 1.5rem;\r\ncolor: #171730;\r\nfont-weight: 500;\r\n`;","import React from 'react';\r\nimport { DescriptionCard } from './description__card';\r\nimport { DescriptionHeader } from './description__header';\r\nimport styled from 'styled-components'\r\n\r\nexport const Description: React.FC = () => {\r\n    return (\r\n        <Wrapper>\r\n            <DescriptionHeader/>\r\n            <DescriptionCard/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 100%;\r\ngrid-template-rows: min-content;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <Title data-text=\"Current Weather\">Current Weather</Title>\r\n    )\r\n}\r\n\r\nconst Title = styled.h1`\r\nfont-weight: 700;\r\nfont-size: 2rem;\r\ncolor: #e96e50;\r\nalign-self: center;\r\njustify-self: center;\r\ntext-shadow: 0 0 20px #171730;\r\nposition: relative;\r\nz-index: 5;\r\n\r\n&:after {\r\ncontent: attr(data-text);\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\nwidth: 100%;\r\nheight: 100%;\r\ntransform: translate(-50%, -50%);\r\ncolor: #171730;\r\nz-index: -1;\r\nfilter: blur(15px);\r\n}\r\n\r\n&:before {\r\ncontent: \"\";\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\ntransform: translate(-50%, -50%);\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: #171730;\r\nz-index: -2;\r\nopacity: 0.5;\r\nfilter: blur(40px);\r\n}\r\n`;","import React from 'react';\r\nimport sprite from \"../../../../assets/sprite.svg\";\r\nimport { ChangeEvent, memo } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype DataProps = {\r\n    valueOfField : string;\r\n    changeValue: (value: string) => void;\r\n}\r\n\r\nexport const SearchBox = memo(({valueOfField, changeValue}: DataProps): JSX.Element => {\r\n    return (\r\n    <Wrapper>\r\n        <Input placeholder=\"Enter the city name...\" onChange={(event: ChangeEvent) => changeValue((event.target as HTMLInputElement).value)} value={valueOfField}/>\r\n        <Button type=\"submit\">\r\n            <Icon>\r\n                <use href={sprite + \"#search\"}></use>\r\n                </Icon>\r\n        </Button>\r\n    </Wrapper>\r\n    )\r\n})\r\n\r\nconst Wrapper = styled.p`\r\nposition: relative;\r\nwidth: 300px;\r\nheight: 60px;\r\n`;\r\n\r\nconst Input = styled.input`\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\npadding: 10px 65px 10px 20px;\r\nborder-radius: 3px;\r\nfont-size: 18px;\r\nborder-radius: 50px;\r\n`;\r\n\r\nconst Button  = styled.button`\r\nposition: absolute;\r\ntop: 0;\r\nright: 0;\r\nwidth: 60px;\r\nheight: 100%;\r\nbackground: #7690da;\r\nz-index: 1;\r\ncursor: pointer;\r\nright: 0px;\r\nborder-radius: 50%;\r\n\r\n&hover{\r\n    background: #708bd2;\r\n}\r\n`\r\nconst Icon = styled.svg`\r\nwidth: 30px;\r\nheight: 30px;\r\n`;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { RootState } from '../../../../../store/rootReducer';\r\n\r\ntype DataProps = {\r\n    forLabel: string,\r\n    forId: string,\r\n    text: string,\r\n    id: number,\r\n    check : boolean,\r\n    onChange: (id: number, value: string) => void,\r\n}\r\n\r\nexport const RadioItem = ({forLabel, forId, text, id,check, onChange}: DataProps): JSX.Element => {\r\n    const {trueInfo} = useSelector((state: RootState) => state.weather);\r\n\r\n    return (\r\n        <Label htmlFor={forLabel} >\r\n            <Input type=\"radio\" name=\"choiseCard\" id={forId} value={text} checked={check} onChange={onChange.bind(null, id, text)} disabled={!trueInfo}/>\r\n            <Span>{text}</Span>\r\n        </Label>\r\n    )\r\n}\r\n\r\nconst Label = styled.label`\r\nposition: relative;\r\ncursor: pointer;\r\nfont-size: 1.8em;\r\ntext-align: center;\r\n`;\r\n\r\nconst Span = styled.span`\r\nposition: relative;\r\ndisplay: inline-block;\r\npadding: 10px;\r\nborder: 1px solid #171730;\r\ncolor: #171730;\r\nborder-radius: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\nappearance: none;\r\n\r\n&:.input:checked ~ ${Span} {\r\ncolor: #e96e50;\r\nborder: 1px solid #e96e50;\r\n}\r\n\r\n&:checked ~ ${Span} {\r\n    color: #e96e50;\r\n    border-color: #e96e50;\r\n    box-shadow: inset 0 0 10px #e96e50;\r\n    transition: all 0.3s;\r\n}\r\n\r\n&:checked ~ ${Span}:before {\r\ncontent: \"\";\r\nwidth: 100%;\r\nheight: 100%;\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nbackground: #171730;\r\nz-index: -1;\r\nfilter: blur(10px);   \r\n}\r\n\r\n&::checked ~ ${Span}:after {\r\ncontent: \"\";\r\nwidth: 100%;\r\nheight: 100%;\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nbackground: #171730;\r\nz-index: -1;\r\nfilter: blur(15px);   \r\n}\r\n`;","import React, { memo } from 'react';\r\nimport { IRadio } from '../../../../models/radio.model';\r\nimport { RadioItem } from './radioItems';\r\nimport styled from 'styled-components'\r\n\r\ntype DataProps = {\r\n    info: IRadio[],\r\n    change: (id: number, value: string) => void\r\n}\r\n\r\nexport const RadioBox = memo(({info, change}: DataProps): JSX.Element => {\r\n    return (\r\n        <Line>\r\n            {info.map((item: IRadio) => <RadioItem key={item.id} onChange={change} {...item}/>)}\r\n        </Line>\r\n    )\r\n})\r\n\r\nconst Line = styled.p`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-evenly;\r\n`;","import { ICoords } from \"../models/coords.model\";\r\nimport { IDataCity } from \"../models/dataCity.model\";\r\nimport IDataPosition from \"../models/dataPosition.model\";\r\n\r\nexport const RECORD_POSITION = 'WEATHER/RECORD_DATA_POSITION';\r\nexport const RECORD_CITY = 'WEATHER/RECORD_CITY';\r\nexport const RECORD_LASTCITY = 'WEATHER/RECORD_LAST_CITY';\r\nexport const RECORD_LASTCOORDS = 'WEATHER/RECORD_LAST_COORDS';\r\nexport const UPDATED_DATA = 'WEATHER/UPDATED_DATA';\r\nexport const TRUE_DATA = 'WEATHER/TRUE_DATA';\r\nexport const FALSE_DATA = 'WEATHER/FALSE_DATA';\r\nexport const REQUEST_WEATHER = 'WEATHER/LOAD_WEATHER';\r\nexport const UPDATE_WEATHER_CITY_CARDS = 'WEATHER/UPDATE_WEATHER_CITY_CARDS';\r\nexport const UPDATE_WEATHER_NEARBY_CARDS = 'WEATHER/UPDATE_WEATHER_NEARBY_CARDS';\r\nexport const RECORD_TYPEREQUEST = 'WEATHER/RECORD_TYPE_REQUEST'\r\n\r\nexport const SHOW_LOADINGCARDS = 'CARDS/SHOW_LOADING_CARDS';\r\nexport const HIDE_LOADINGCARDS = 'CARDS/HIDE_LOADING_CARDS';\r\nexport const SHOW_LOADER = 'FORM/SHOW_LOADER';\r\nexport const HIDE_LOADER = 'FORM/HIDE_LOADER';\r\n\r\n\r\ninterface recordPositionAction {\r\n        type: typeof RECORD_POSITION,\r\n        payload: IDataPosition,\r\n}\r\n\r\ninterface recordLastCityAction {\r\n        type: typeof RECORD_LASTCITY,\r\n        payload: string,\r\n}\r\n\r\ninterface recordCityAction {\r\n        type: typeof RECORD_CITY,\r\n        payload: IDataCity,\r\n}\r\n\r\ninterface recordLastCoordsAction {\r\n    type: typeof RECORD_LASTCOORDS,\r\n    payload: ICoords,\r\n}\r\n\r\ninterface updateDataAction {\r\n    type: typeof UPDATED_DATA,\r\n    payload: string,\r\n}\r\n\r\ninterface updatedWeatherCityCardsAction {\r\n    type: typeof UPDATE_WEATHER_CITY_CARDS,\r\n    payload: string,\r\n}\r\n\r\ninterface updatedWeatherNearbyCardsAction {\r\n    type: typeof UPDATE_WEATHER_NEARBY_CARDS,\r\n    payload: ICoords,\r\n}\r\n\r\ninterface trueDataAction {\r\n    type: typeof TRUE_DATA,\r\n}\r\n\r\ninterface falseDataAction {\r\n    type: typeof FALSE_DATA,\r\n}\r\n\r\ninterface showLoadingCardAction {\r\n    type: typeof SHOW_LOADINGCARDS,\r\n}\r\n\r\ninterface hideLoadingCardAction {\r\n    type: typeof HIDE_LOADINGCARDS,\r\n}\r\n\r\ninterface showFormLoaderAction {\r\n        type: typeof SHOW_LOADER,\r\n}\r\n\r\ninterface hideFormLoaderAction {\r\n        type: typeof HIDE_LOADER,\r\n}\r\n\r\ninterface loadCurrentWeatherAction {\r\n    type: typeof REQUEST_WEATHER,\r\n    payload: ICoords,\r\n}\r\n\r\ninterface recordTypeRequestAction {\r\n    type: typeof RECORD_TYPEREQUEST,\r\n    payload: string,\r\n}\r\n\r\n\r\nexport type WeatherActionTypes = \r\n    recordPositionAction |\r\n    recordLastCityAction | \r\n    recordCityAction | \r\n    updateDataAction |\r\n    showLoadingCardAction | \r\n    hideLoadingCardAction | \r\n    showFormLoaderAction | \r\n    hideFormLoaderAction | \r\n    recordLastCoordsAction |\r\n    trueDataAction |\r\n    falseDataAction |\r\n    updatedWeatherCityCardsAction |\r\n    updatedWeatherNearbyCardsAction |\r\n    recordTypeRequestAction |\r\n    loadCurrentWeatherAction;","import { ICoords } from '../models/coords.model';\r\nimport { IDataCity } from '../models/dataCity.model';\r\nimport IDataPosition from '../models/dataPosition.model';\r\nimport { \r\n    RECORD_POSITION,\r\n    REQUEST_WEATHER,\r\n    RECORD_LASTCITY,\r\n    RECORD_CITY,\r\n    SHOW_LOADER,\r\n    HIDE_LOADER,\r\n    WeatherActionTypes,\r\n    SHOW_LOADINGCARDS,\r\n    HIDE_LOADINGCARDS,\r\n    RECORD_LASTCOORDS,\r\n    UPDATED_DATA,\r\n    TRUE_DATA,\r\n    FALSE_DATA,\r\n    UPDATE_WEATHER_CITY_CARDS,\r\n    UPDATE_WEATHER_NEARBY_CARDS,\r\n    RECORD_TYPEREQUEST\r\n} from './types';\r\n\r\nexport const recordDataPosition = (data: IDataPosition): WeatherActionTypes => {\r\n    return {\r\n        type: RECORD_POSITION,\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const recordCity = (city: IDataCity): WeatherActionTypes => {\r\n    return {\r\n        type: RECORD_CITY,\r\n        payload: city\r\n    }\r\n}\r\n\r\nexport const recordLastCity = (city: string): WeatherActionTypes => {\r\n    return {\r\n        type: RECORD_LASTCITY,\r\n        payload: city\r\n    }\r\n}\r\n\r\nexport const recordLastCoords = (coords: ICoords): WeatherActionTypes => {\r\n    return {\r\n        type: RECORD_LASTCOORDS,\r\n        payload: coords\r\n    }\r\n}\r\n\r\nexport const updateData = (city: string): WeatherActionTypes => {\r\n    return {\r\n        type: UPDATED_DATA,\r\n        payload: city\r\n    }\r\n}\r\n\r\nexport const updatedWeatherCityCards = (city: string): WeatherActionTypes => {\r\n    return {\r\n        type: UPDATE_WEATHER_CITY_CARDS,\r\n        payload: city\r\n    }\r\n}\r\n\r\nexport const updatedWeatherNearbyCards = (coords: ICoords): WeatherActionTypes => {\r\n    return {\r\n        type: UPDATE_WEATHER_NEARBY_CARDS,\r\n        payload: coords\r\n    }\r\n}\r\n\r\nexport const trueData = (): WeatherActionTypes => {\r\n    return {\r\n        type: TRUE_DATA,\r\n    }\r\n}\r\n\r\nexport const falseData = (): WeatherActionTypes => {\r\n    return {\r\n        type: FALSE_DATA,\r\n    }\r\n}\r\n\r\n\r\nexport const showLoadingCards = (): WeatherActionTypes => {\r\n    return {\r\n        type: SHOW_LOADINGCARDS,\r\n    }\r\n}\r\n\r\nexport const hideLoadingCards = (): WeatherActionTypes => {\r\n    return {\r\n        type: HIDE_LOADINGCARDS,\r\n    }\r\n}\r\n\r\nexport const showFormLoader = (): WeatherActionTypes => {\r\n    return {\r\n        type: SHOW_LOADER,\r\n    }\r\n}\r\n\r\nexport const hideFormLoader = (): WeatherActionTypes => {\r\n    return {\r\n        type: HIDE_LOADER,\r\n    }\r\n}\r\n\r\nexport const loadCurrentWeather = (coord: ICoords): WeatherActionTypes => {\r\n    return {\r\n        type: REQUEST_WEATHER,\r\n        payload: coord\r\n    }\r\n}\r\n\r\nexport const recordTypeRequestAction = (flag: string) : WeatherActionTypes => {\r\n    return {\r\n        type: RECORD_TYPEREQUEST,\r\n        payload: flag\r\n    }\r\n}","import React, { FormEvent,FormEventHandler, memo, useCallback, useState} from 'react';\r\nimport { SearchBox } from './searchBox';\r\nimport { RadioBox } from './radioBox';\r\n\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateData, updatedWeatherCityCards, updatedWeatherNearbyCards } from '../../../store/actions';\r\nimport { RootState } from '../../../store/rootReducer';\r\n\r\n\r\nexport const SearchForm: React.FC = memo((): JSX.Element => {\r\n    const {typeRequset, lastCoords, lastCity} = useSelector((state: RootState) => state.weather);\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const [ radioValue , setRadioValue ] = useState([\r\n        {id : 1, forLabel :'Hourly', forId : 'Hourly' , text: 'Hourly', check : true},\r\n        {id : 2, forLabel : 'Nearby', forId : 'Nearby', text: 'Nearby', check : false},\r\n    ]);\r\n    \r\n    const update = useCallback((city: string): void => {\r\n    switch (typeRequset) {\r\n      case 'Hourly':\r\n        dispatch(updateData(city));\r\n      break;\r\n      case 'Nearby':\r\n        dispatch(updateData(city));\r\n        if(lastCoords) dispatch(updatedWeatherNearbyCards(lastCoords));\r\n    }\r\n  }, [dispatch, lastCoords, typeRequset]);\r\n\r\n    const submitHandler: FormEventHandler<HTMLFormElement> = useCallback((event: FormEvent) => {\r\n        event.preventDefault();\r\n        if (value.trim()) {\r\n            update(value);\r\n            setValue(\" \");\r\n    }\r\n    },[update, value])\r\n\r\n    const change = useCallback((id: number, value: string) => {\r\n        setRadioValue( radioValue.map(radio => {\r\n            if (radio.id === id) radio.check = !radio.check\r\n            else radio.check = !radio.check\r\n            return radio;\r\n        }));\r\n        switch (value) {\r\n          case 'Hourly':\r\n            dispatch(updatedWeatherCityCards(lastCity));\r\n            break;\r\n          case 'Nearby':\r\n            if(lastCoords) dispatch(updatedWeatherNearbyCards(lastCoords));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        \r\n    }, [dispatch, lastCity, lastCoords, radioValue])\r\n\r\n    return (\r\n    <Form onSubmit={submitHandler}>\r\n        <SearchBox valueOfField={value} changeValue={setValue}/>\r\n        <RadioBox info={radioValue} change={change}/>\r\n    </Form>\r\n    )\r\n})\r\n\r\n\r\nconst Form = styled.form`\r\ndisplay: grid;\r\ngrid-template-columns: 1fr;\r\ngrid-template-rows: 60px 50px;\r\ngrid-gap: 5px;\r\n`;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nexport const Spinner = (): JSX.Element => {\r\n    return (\r\n        <SpinnerBlock></SpinnerBlock>\r\n    )\r\n}\r\n\r\nconst Loader = keyframes`\r\n0% {\r\n    transform: scale(0);\r\n    opacity: 0;\r\n}\r\n50% {\r\n    opacity: 1;\r\n}\r\n100% {\r\n    transform: scale(1);\r\n    opacity: 0;\r\n}\r\n`;\r\n\r\nconst SpinnerBlock = styled.div`\r\nwidth: 319px;\r\nheight: 319px;\r\nline-height: 319px;\r\nmargin: 106px auto;\r\nposition: relative;\r\nbox-sizing: border-box;\r\ntext-align: center;\r\nz-index: 0;\r\ntext-transform: uppercase;\r\n\r\n&:before, &:after{\r\nopacity: 0;\r\nbox-sizing: border-box;\r\ncontent: \"\\0020\";\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nborder-radius: 213px;\r\nborder: 11px solid #171730;\r\nbox-shadow: 0 0 106px #21172f, inset 0 0 106px #21172f;\r\n}\r\n\r\n&:before {\r\nz-index: 2;\r\nanimation: ${Loader} 2.3s infinite;\r\n}\r\n\r\n&:after {\r\nz-index: 1;\r\nanimation: ${Loader} 2.3s infinite 1.15s;\r\n}\r\n`;","import React, { memo } from 'react';\r\nimport { Description } from './description';\r\nimport { Header } from './header';\r\nimport { SearchForm } from './search';\r\nimport { Spinner } from '../spinner';\r\n\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/rootReducer';\r\n\r\nexport const CurrentWeather = memo(() => {\r\n    const loadingMain = useSelector((state: RootState) => state.weather.loadingForm );\r\n    const trueInfo = useSelector((state: RootState) => state.weather.trueInfo);\r\n    \r\n    return (\r\n        <Content>\r\n            <Header/>\r\n            <SearchForm/>\r\n            {loadingMain ? <Spinner/> : trueInfo ? <Description/> : ''}\r\n        </Content>\r\n    )\r\n})\r\n\r\n\r\nconst Content = styled.div`\r\nalign-self: center;\r\njustify-self: center;\r\npadding: 15px;\r\nbackground: rgba(255, 255, 255, 0.3);\r\nbox-shadow: 0 15px 35px rgba(255, 255, 255, 0.3);\r\nborder-radius: 15px;\r\nbackdrop-filter: blur(10px);\r\ndisplay: grid;\r\ngrid-template-columns: 100%;\r\ngrid-gap: 15px;\r\n\r\n@media screen and(max-width: 440px) {\r\n        padding: 3px;\r\n}\r\n`;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nexport const Dots = (): JSX.Element => {\r\n    return (\r\n        <Span></Span>\r\n    )\r\n}\r\n\r\nconst move = keyframes`\r\n100% {\r\n    transform: translate3d(0, 0, 1px) rotate(360deg);\r\n}\r\n`;\r\n\r\nconst Span = styled.span`\r\nwidth: 20vmin;\r\nheight: 20vmin;\r\nborder-radius: 20vmin;\r\nbackface-visibility: hidden;\r\nposition: absolute;\r\nanimation-name: ${move};\r\nanimation-duration: 6s;\r\nanimation-timing-function: linear;\r\nanimation-iteration-count: infinite;\r\n\r\n&:nth-child(1) {\r\ncolor: #171730;\r\ntop: 8%;\r\nleft: 82%;\r\nanimation-duration: 12.7s;\r\nanimation-delay: -7.1s;\r\ntransform-origin: 14vw 16vh;\r\nbox-shadow: -40vmin 0 11.355vmin #171730;\r\n}\r\n\r\n&:nth-child(2) {\r\ncolor: #21172f;\r\ntop: 11%;\r\nleft: 84%;\r\nanimation-duration: 16s;\r\nanimation-delay: -7.5s;\r\ntransform-origin: 0vw -6vh;\r\nbox-shadow: 40vmin 0 8.23129vmin #21172f;\r\n}\r\n\r\n&:nth-child(3) {\r\ncolor: #21172f;\r\ntop: 6%;\r\nleft: 79%;\r\nanimation-duration: 14.4s;\r\nanimation-delay: -1.4s;\r\ntransform-origin: -5vw 16vh;\r\nbox-shadow: -40vmin 0 10.53284vmin #21172f;\r\n}\r\n\r\n&:nth-child(4) {\r\ncolor: #15222c;\r\ntop: 76%;\r\nleft: 13%;\r\nanimation-duration: 13.5s;\r\nanimation-delay: -8.8s;\r\ntransform-origin: -12vw 9vh;\r\nbox-shadow: 40vmin 0 13.90046vmin #15222c;\r\n}\r\n\r\n&:nth-child(5) {\r\ncolor: #171730;\r\ntop: 87%;\r\nleft: 9%;\r\nanimation-duration: 12.4s;\r\nanimation-delay: -9.7s;\r\ntransform-origin: -17vw -2vh;\r\nbox-shadow: -40vmin 0 9.68086vmin #171730;\r\n}\r\n\r\n&:nth-child(6) {\r\ncolor: #21172f;\r\ntop: 23%;\r\nleft: 39%;\r\nanimation-duration: 10.8s;\r\nanimation-delay: -0.6s;\r\ntransform-origin: 5vw 0vh;\r\nbox-shadow: 40vmin 0 7.08275vmin #21172f;\r\n}\r\n\r\n&:nth-child(7) {\r\ncolor: #15222c;\r\ntop: 4%;\r\nleft: 67%;\r\nanimation-duration: 10.4s;\r\nanimation-delay: -7.2s;\r\ntransform-origin: -18vw -9vh;\r\nbox-shadow: -40vmin 0 7.07752vmin #15222c;\r\n}\r\n\r\n&:nth-child(8) {\r\ncolor: #21172f;\r\ntop: 4%;\r\nleft: 58%;\r\nanimation-duration: 10.3s;\r\nanimation-delay: -10.5s;\r\ntransform-origin: -5vw -4vh;\r\nbox-shadow: -40vmin 0 11.50681vmin #21172f;\r\n}\r\n\r\n&:nth-child(9) {\r\ncolor: #171730;\r\ntop: 91%;\r\nleft: 49%;\r\nanimation-duration: 12.8s;\r\nanimation-delay: -5s;\r\ntransform-origin: 6vw -14vh;\r\nbox-shadow: 40vmin 0 5.71496vmin #171730;\r\n}\r\n\r\n&:nth-child(10) {\r\ncolor: #21172f;\r\ntop: 13%;\r\nleft: 61%;\r\nanimation-duration: 13.1s;\r\nanimation-delay: -11.9s;\r\ntransform-origin: 13vw -6vh;\r\nbox-shadow: -40vmin 0 6.28516vmin #21172f;\r\n}\r\n\r\n&:nth-child(11) {\r\ncolor: #171730;\r\ntop: 51%;\r\nleft: 37%;\r\nanimation-duration: 11.7s;\r\nanimation-delay: -12.6s;\r\ntransform-origin: 12vw -8vh;\r\nbox-shadow: -40vmin 0 7.5548vmin #171730;\r\n}\r\n\r\n&:nth-child(12) {\r\ncolor: #171730;\r\ntop: 30%;\r\nleft: 98%;\r\nanimation-duration: 15.8s;\r\nanimation-delay: -15.5s;\r\ntransform-origin: 25vw 18vh;\r\nbox-shadow: -40vmin 0 7.8254vmin #171730;\r\n}\r\n\r\n&:nth-child(13) {\r\ncolor: #15222c;\r\ntop: 22%;\r\nleft: 43%;\r\nanimation-duration: 12s;\r\nanimation-delay: -8.2s;\r\ntransform-origin: -7vw 23vh;\r\nbox-shadow: 40vmin 0 11.78703vmin #15222c;\r\n}\r\n\r\n&:nth-child(14) {\r\ncolor: #171730;\r\ntop: 100%;\r\nleft: 94%;\r\nanimation-duration: 13.2s;\r\nanimation-delay: -3.1s;\r\ntransform-origin: -17vw 13vh;\r\nbox-shadow: -40vmin 0 5.34329vmin #171730;\r\n}\r\n\r\n&:nth-child(15) {\r\ncolor: #15222c;\r\ntop: 64%;\r\nleft: 78%;\r\nanimation-duration: 13.2s;\r\nanimation-delay: -5.3s;\r\ntransform-origin: 0vw -15vh;\r\nbox-shadow: 40vmin 0 11.32768vmin #15222c;\r\n}\r\n\r\n&:nth-child(16) {\r\ncolor: #21172f;\r\ntop: 44%;\r\nleft: 35%;\r\nanimation-duration: 13s;\r\nanimation-delay: -3.6s;\r\ntransform-origin: 5vw -17vh;\r\nbox-shadow: -40vmin 0 14.03915vmin #21172f;\r\n}\r\n\r\n&:nth-child(17) {\r\ncolor: #15222c;\r\ntop: 100%;\r\nleft: 5%;\r\nanimation-duration: 14.4s;\r\nanimation-delay: -15.6s;\r\ntransform-origin: 17vw -4vh;\r\nbox-shadow: 40vmin 0 8.58716vmin #15222c;\r\n}\r\n\r\n&:nth-child(18) {\r\ncolor: #15222c;\r\ntop: 91%;\r\nleft: 69%;\r\nanimation-duration: 14.5s;\r\nanimation-delay: -8.7s;\r\ntransform-origin: -16vw -19vh;\r\nbox-shadow: 40vmin 0 7.2715vmin #15222c;\r\n}\r\n\r\n&:nth-child(19) {\r\ncolor: #21172f;\r\ntop: 87%;\r\nleft: 96%;\r\nanimation-duration: 11.5s;\r\nanimation-delay: -15.5s;\r\ntransform-origin: -20vw -11vh;\r\nbox-shadow: -40vmin 0 7.73618vmin #21172f;\r\n}\r\n\r\n&:nth-child(20) {\r\ncolor: #15222c;\r\ntop: 7%;\r\nleft: 85%;\r\nanimation-duration: 14.7s;\r\nanimation-delay: -7.6s;\r\ntransform-origin: 21vw -7vh;\r\nbox-shadow: -40vmin 0 10.62407vmin #15222c;\r\n}\r\n`;\r\n\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport sprite from \"../../../assets/sprite.svg\";\r\nimport styled from 'styled-components'\r\nimport { RootState } from \"../../../store/rootReducer\";\r\n\r\nexport const ForecastHeader: React.FC = () => {\r\n    const typeRequset = useSelector((state: RootState) => state.weather.typeRequset);\r\n    \r\n    return (\r\n        <Wrapper>\r\n            <Header>{typeRequset} forecast</Header>\r\n            <div>\r\n                <Icon>\r\n                    <use href={sprite + \"#lady\"}></use>\r\n                </Icon>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.header`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-evenly;\r\n`;\r\n\r\nconst Header = styled.h2`\r\nfont-weight: 700;\r\nfont-size: 2rem;\r\ncolor: #e96e50;\r\n`;\r\n\r\nconst Icon = styled.svg`\r\nwidth: 108px;\r\nheight: 50px;\r\nbackground: rgba(255, 255, 255, 0.3);\r\nbox-shadow: 0 15px 35px rgba(255, 255, 255, 0.3);\r\nborder-radius: 2px;\r\nbackdrop-filter: blur(10px);\r\n`;","import React from \"react\";\r\nimport styled  from 'styled-components';\r\n\r\ntype CityProps = {\r\n    data : [string, number]\r\n}\r\n\r\nexport const CityField: React.FC<CityProps> = ({data}: CityProps) => {\r\n    const innerData = data[1];\r\n    \r\n    return (\r\n        <Header>\r\n            {innerData}\r\n        </Header>\r\n    )\r\n}\r\n\r\n\r\nconst Header = styled.h3`\r\ntext-align: center;\r\nfont-weight: 600;\r\n`;","import React from \"react\";\r\nimport { IWeather } from '../../../../../models/dataCity.model';\r\nimport styled from 'styled-components';\r\n\r\ntype DataProps = {\r\n    data: IWeather\r\n}\r\n\r\nexport const ImageField: React.FC<DataProps> = ({data}: DataProps) => {\r\n    const icon: string = data.icon;\r\n    \r\n    return (\r\n        <Wrapper>\r\n            <img style={{maxWidth: '50px'}} src={icon ? `http://openweathermap.org/img/wn/${icon}@2x.png` : ''} alt=\"icon\"/>\r\n            <Text>{data.description}</Text>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.figure`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-evenly;\r\n`;\r\n\r\nconst Text = styled.figcaption`\r\nfont-size: 1.2rem;\r\nfont-weight: 500;\r\n`;","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\ntype DateProps = {\r\n    data : [string, number]\r\n}\r\n\r\nexport const DateField: React.FC<DateProps>= ({data}: DateProps) => {\r\n    const innerData = new Date(data[1] * 1000).toLocaleString();\r\n    \r\n    return (\r\n        <Header>\r\n            <time dateTime={innerData}>{innerData}</time>\r\n        </Header>\r\n    )\r\n}\r\n\r\nconst Header = styled.h3`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nfont-size: 1rem;\r\nfont-weight: 600;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport sprite from \"../../../../../../assets/sprite.svg\";\r\n\r\ntype DataProps = {\r\n    data : [string, number];\r\n}\r\n\r\nexport const DataListFieldItem: React.FC<DataProps> = ({data}: DataProps) => {\r\n    let nameOfFields = '';\r\n    let valueOfField = '';\r\n    let rotate = '';\r\n\r\n    switch (data[0]) {\r\n        case 'temp':\r\n            nameOfFields = 'Temperature';\r\n            valueOfField = data[1].toFixed(1) + String.fromCharCode(8451)\r\n        break;\r\n        case 'feels_like':\r\n            nameOfFields = 'Feels like';\r\n            valueOfField = data[1].toFixed(1) + String.fromCharCode(8451)\r\n        break;\r\n        case 'speed':\r\n            nameOfFields = 'Speed';\r\n            valueOfField = data[1].toFixed(1) + '(m/s)'\r\n        break;\r\n        case 'deg':\r\n            nameOfFields = 'Direction';\r\n            valueOfField = data[1].toFixed(1) + String.fromCharCode(37);\r\n            rotate = `rotateZ(${data[1]}deg)`;\r\n        break;\r\n    }\r\n    \r\n    return (\r\n            <ListItem>\r\n                <span>{nameOfFields}</span>\r\n                <span>{nameOfFields === 'Direction' ? <Icon style={{transform: rotate}}><use href={sprite + \"#arrow\"}></use></Icon> : valueOfField}</span>\r\n            </ListItem>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ListItem = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n`;\r\n\r\nconst Icon = styled.svg`\r\nwidth: 10px;\r\nheight: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { DataListFieldItem } from './dataListFieldItem';\r\nimport styled from 'styled-components';\r\n\r\ntype DataProps = {\r\n    data : [string, number];\r\n}\r\n\r\ntype ArrayKey = [string, number]\r\n\r\nexport const DataListField: React.FC<DataProps> = ({data}: DataProps) => {\r\n    let innerHeaderField: string;\r\n    let innerItemFieldArray: Array<ArrayKey> = [];\r\n\r\n    switch (data[0]) {\r\n        case 'main':\r\n            innerHeaderField = 'Temperature';\r\n            innerItemFieldArray = Object.entries(data[1]).filter((item: ArrayKey) => item[0] === 'temp' || item[0] === 'feels_like');\r\n        break;\r\n        case 'wind':\r\n            innerHeaderField = 'Wind';\r\n            innerItemFieldArray = Object.entries(data[1]);\r\n        break;\r\n        default:\r\n            innerHeaderField = 'unknown';\r\n        break;\r\n    }\r\n    \r\n    return (\r\n        <List>\r\n            <ListHeader><h3>{innerHeaderField}</h3></ListHeader>\r\n            {innerItemFieldArray.map((item: ArrayKey, index: number)=> <DataListFieldItem key={index} data={item}/>)}\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nconst List = styled.ul`\r\ndisplay: grid;\r\ngrid-template-columns: 1fr;\r\ngrid-template-rows: repeat(3, 14px);\r\ngrid-gap: 5px;\r\n`;\r\n\r\nconst ListHeader = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\ncolor: #171730;\r\nfont-weight: 500;\r\n`;","import React from \"react\";\r\nimport { CityField } from \"./cityField\";\r\nimport { ImageField } from \"./imageField\";\r\nimport { DateField } from \"./dateField\";\r\nimport { DataListField } from \"./dataListField\";\r\nimport { IMainInfo, IWeather } from \"../../../../models/dataCity.model\";\r\n\r\nimport styled from 'styled-components';\r\n\r\ntype CityProps = {\r\n    data : IMainInfo;\r\n}\r\n\r\ntype ArrayKey = [string, number];\r\n\r\nexport const ForecastListItem: React.FC<CityProps>= ({data}: CityProps) => {\r\n    let cityData: Array<ArrayKey> = [];\r\n    let dateData: Array<ArrayKey> = [];\r\n    let imageData: Array<IWeather> = [];\r\n    let temperatureArray: Array<ArrayKey> = [];\r\n    let windArray: Array<ArrayKey> = [];\r\n\r\n    if (data) {\r\n        cityData = Object.entries(data).filter((item: ArrayKey) => item[0] === 'name');\r\n        dateData = Object.entries(data).filter((item: ArrayKey) => item[0] === 'dt');\r\n        imageData =  Object.values(data.weather)\r\n        temperatureArray = Object.entries(data).filter((item: ArrayKey) => item[0] === 'main');\r\n        windArray = Object.entries(data).filter((item: ArrayKey) => item[0] === 'wind');\r\n    }\r\n\r\n    return (\r\n        <Cards>\r\n            {cityData.length > 0 ? cityData.map((item: ArrayKey, index: number) =>  <CityField key={index} data={item}/>) : dateData.map((item: ArrayKey, index: number) =>  <DateField key={index} data={item}/>)}\r\n            {imageData.map((item: IWeather, index: number) => <ImageField key={index} data ={item}/>)}\r\n            {temperatureArray.map((item: ArrayKey, index: number) => <DataListField key={index} data={item}/>)}\r\n            {windArray.map((item: ArrayKey, index: number) => <DataListField key={index} data={item}/>)}\r\n        </Cards>\r\n    )\r\n}\r\n\r\nconst Cards = styled.div`\r\nwidth: 100%;\r\ndisplay: grid;\r\ngrid-template-columns: 1fr;\r\ngrid-template-rows: 18px 50px repeat(2, 52px);\r\nbackground: rgba(255, 255, 255, 0.3);\r\nbox-shadow: 0 15px 35px rgba(255, 255, 255, 0.3);\r\nborder-radius: 15px;\r\nbackdrop-filter: blur(10px);\r\npadding: 5px;\r\ncursor: pointer;\r\n`;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nexport const Loader = (): JSX.Element => {\r\n    return (\r\n        <Wrapper>\r\n            <Circle></Circle>\r\n            <Circle></Circle>\r\n            <Circle></Circle>\r\n            <Circle></Circle>\r\n            <Circle></Circle>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst animation = keyframes`\r\n0% {\r\n    transform: rotateY(0deg) rotateX(0deg);\r\n    opacity: 1;\r\n}\r\n25% {\r\n    transform: rotateY(180deg) rotateX(360deg);\r\n}\r\n50% {\r\n    transform: rotateY(540deg) rotateX(540deg);\r\n}\r\n75% {\r\n    transform: rotateY(720deg) rotateX(900deg);\r\n}\r\n100% {\r\n    transform: rotateY(900deg) rotateX(1080deg);\r\n    opacity: 1;\r\n}\r\n`;\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\n-ms-flex-item-align: center;\r\n-ms-grid-row-align: center;\r\nalign-self: center;\r\n-ms-grid-column-align: center;\r\njustify-self: center;\r\nwidth: 550px;\r\nheight: 550px;\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\ntransform: translate(-50%, -50%);\r\nperspective: 11000px;\r\ntransform-style: preserve-3d;\r\n`;\r\n\r\nconst Circle = styled.div`\r\ntransform-style: preserve-3d;\r\nbox-sizing: border-box;\r\nopacity: 0;\r\nwidth: 550px;\r\nheight: 550px;\r\nborder: 6px solid #e96f50;\r\nborder-radius: 413px;\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nanimation: ${animation} 13.5s ease-in-out alternate infinite;\r\n\r\n&:nth-of-type(1) {\r\n    animation-delay: 225ms;\r\n}\r\n\r\n&:nth-of-type(2) {\r\n    animation-delay: 450ms;\r\n}\r\n\r\n&:nth-of-type(3) {\r\n    animation-delay: 675ms;\r\n}\r\n\r\n&:nth-of-type(4) {\r\n    animation-delay: 900ms;\r\n}\r\n\r\n&:nth-of-type(5) {\r\n    animation-delay: 1125ms;\r\n}\r\n`;\r\n","import React from 'react';\r\n\r\nimport { ForecastListItem } from './forecastListItem';\r\nimport { Loader } from '../../loader';\r\nimport { FourHundredFour } from '../../404';\r\n\r\nimport { IMainInfo } from '../../../models/dataCity.model';\r\n\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../store/rootReducer';\r\n\r\nexport const ForecastList: React.FC = () => {\r\n    const {dataCity, loadingCards, trueInfo} = useSelector((state: RootState) => state.weather);\r\n\r\n    let quantityOfCards: Array<IMainInfo> = [];\r\n\r\n    if (dataCity?.list) quantityOfCards = dataCity.list.slice(0,9);\r\n    \r\n    return (\r\n        <MainList>\r\n            {loadingCards ? <Loader/> : trueInfo ? quantityOfCards.map((item: IMainInfo, index: number)=> <ForecastListItem key={index} data={item}/>) : <FourHundredFour/>}\r\n        </MainList>\r\n    )\r\n}\r\n\r\nconst MainList = styled.div`\r\nalign-self: center;\r\njustify-self: center;\r\ndisplay: grid;\r\ngrid-template-columns: 200px 200px 200px;\r\ngrid-template-rows: 190px 190px 190px;\r\ngrid-gap: 10px;\r\nalign-content: center;\r\njustify-items: center;\r\npadding-bottom: 10px;\r\nposition: relative;\r\n\r\n@media screen and(max-width: 440px) {\r\n        grid-template-columns: 200px;\r\n        grid-template-rows: repeat(5, 190px);\r\n}\r\n\r\n@media screen and (min-width: 440px) and (max-width: 650px) {\r\n        grid-template-columns: 200px 200px;\r\n        grid-template-rows: repeat(4, 190px);\r\n}\r\n`;\r\n","import React from 'react';\r\nimport { ForecastHeader } from './forecastHeader';\r\nimport { ForecastList } from './forecastList';\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport const HourlyForecast: React.FC = () => {\r\n    return (\r\n        <Cards>\r\n            <ForecastHeader/>\r\n            <ForecastList/>\r\n        </Cards>\r\n    )\r\n}\r\n\r\nconst Cards = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 1fr;\r\ngrid-template-rows: 10vh 90vh;\r\n\r\n@media screen and (max-width: 650px) {\r\n        grid-template-rows: 70px 1fr;\r\n}\r\n`;","import { IOptions } from \"../models/options.model\";\r\n\r\nexport const geolocationOptions: IOptions = {\r\n    enableHighAccuracy: true,\r\n    timeout: 1000 * 60 * 1, // 1 min (1000 ms * 60 sec * 1 minute = 60 000ms)\r\n    maximumAge: 1000 * 3600 * 24, // 24 hour\r\n  };","import { ICoords } from \"../models/coords.model\";\r\n\r\nexport const defaultCoords: ICoords = {\r\n    lat:  50.4546600,\r\n    lon:  30.5238000,\r\n};","export const dots = ():number[] => {\r\n    const array : number[] = [];\r\n    for (let index = 0; index <= 19; index++) {\r\n        array.push(index);\r\n    }\r\n    return array\r\n};","import React, { useEffect, useMemo } from 'react';\nimport useCurrentLocation from '../../hooks/useCurrentLocation';\n\nimport { CurrentWeather } from '../currentWeather';\nimport { Dots } from '../dots';\nimport { HourlyForecast } from '../hourlyForecast';\n\n\nimport { geolocationOptions } from \"../../constant/option\";\nimport { defaultCoords } from \"../../constant/defaultCoords\";\nimport { dots } from '../../constant/quantityOfDots'\n\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { loadCurrentWeather, recordLastCoords } from '../../store/actions';\n\n\nexport const MainPage: React.FC = () => {\n  const { location: currentLocation, error: currentError } = useCurrentLocation(geolocationOptions);\n  const dispatch = useDispatch();\n\n\n  const targetLoaction = useMemo(() => {\n    return currentLocation ?? defaultCoords;\n  }, [currentLocation]);\n\n  useEffect(() => {\n      dispatch(loadCurrentWeather(targetLoaction));\n      dispatch(recordLastCoords(targetLoaction));\n  }, [dispatch, targetLoaction]);\n\n  return (\n      <Wrapper>\n        <Background>\n          {dots().map((item: number) => <Dots key={item} />)}\n        </Background>\n        <Container>\n          <HourlyForecast />\n          <CurrentWeather />\n        </Container>\n      </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\nposition: relative;\n`;\n\nconst Background = styled.div`\nwidth: 100vw;\nheight: 100vh;\nbackground: #48484a;\nz-index: 1;\n`;\n\nconst Container = styled.div`\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 100vw;\nheight: 100vh;\ndisplay: grid;\ngrid-template-columns: 72% 28%;\ngrid-template-rows: 1fr;\noverflow-y: scroll;\n\n@media screen and (max-width: 1200px) {\n  grid-template-columns: 1fr;\n  grid-template-rows: 680px 680px;\n}\n\n@media screen and (min-width: 440px) and (max-width: 650px) {\n  grid-template-rows: 1200px 680px;\n}\n\n@media screen and(max-width: 440px) {\n  grid-template-rows: 1838px 680px;\n}\n`;\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { FourHundredFour } from \"./components/404\";\r\nimport { MainPage } from \"./components/main\";\r\n\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainPage} />\r\n          <Route path=\"*\" component={FourHundredFour} />\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ICoords } from \"../models/coords.model\";\r\nimport { IDataCity } from \"../models/dataCity.model\";\r\nimport IDataPosition from \"../models/dataPosition.model\";\r\nimport { \r\n    RECORD_POSITION,\r\n    RECORD_LASTCITY,\r\n    RECORD_CITY,\r\n    SHOW_LOADINGCARDS,\r\n    HIDE_LOADINGCARDS,\r\n    TRUE_DATA,\r\n    FALSE_DATA,\r\n    RECORD_TYPEREQUEST,\r\n    SHOW_LOADER,\r\n    HIDE_LOADER,\r\n    WeatherActionTypes,\r\n    RECORD_LASTCOORDS\r\n} from \"./types\";\r\n\r\nexport interface IinitialState {\r\n    dataPosition: IDataPosition | null;\r\n    dataCity: IDataCity | null;\r\n    lastCity: string;\r\n    loadingCards: boolean;\r\n    loadingForm: boolean;\r\n    lastCoords: ICoords | null;\r\n    typeRequset: string;\r\n    trueInfo: boolean;\r\n}\r\n\r\nconst initialState: IinitialState = {\r\n    dataPosition: null,\r\n    dataCity: null,\r\n    lastCity: '',\r\n    loadingCards: true,\r\n    loadingForm: true,\r\n    lastCoords: null,\r\n    typeRequset: 'Hourly',\r\n    trueInfo: true,\r\n};\r\n\r\nexport const weatherReducer = (state = initialState, action: WeatherActionTypes): IinitialState => {\r\n    switch (action.type) {\r\n        case RECORD_POSITION:\r\n            return {\r\n                ...state,\r\n                dataPosition: {...action.payload}\r\n            }\r\n        case RECORD_LASTCITY:\r\n            return {\r\n                ...state,\r\n                lastCity: action.payload,\r\n                }\r\n        case RECORD_CITY:\r\n                return {\r\n                ...state,\r\n                dataCity: {...action.payload},\r\n                }\r\n        case RECORD_LASTCOORDS:\r\n                return {\r\n                ...state,\r\n                lastCoords: {...action.payload},\r\n                }\r\n        case RECORD_TYPEREQUEST:\r\n                return {\r\n                ...state,\r\n                typeRequset: action.payload,\r\n                }\r\n        case SHOW_LOADINGCARDS:\r\n            return {\r\n                ...state,\r\n                loadingCards: true,\r\n                }\r\n        case HIDE_LOADINGCARDS:\r\n                return {\r\n                ...state,\r\n                loadingCards: false,\r\n                }\r\n        case TRUE_DATA:\r\n                return {\r\n                ...state,\r\n                trueInfo: true,\r\n                }\r\n        case FALSE_DATA:\r\n                return {\r\n                ...state,\r\n                trueInfo: false,\r\n                }\r\n       \r\n        case SHOW_LOADER:\r\n                return {\r\n                ...state,\r\n                loadingForm: true,\r\n                }\r\n        case HIDE_LOADER:\r\n                return {\r\n                ...state,\r\n                loadingForm: false,\r\n                }            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { weatherReducer } from \"./weatherReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    weather : weatherReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { ICoords } from \"../models/coords.model\";\r\nimport IDataPosition from \"../models/dataPosition.model\";\r\n\r\nconst API_key = '44b788430b6eae4f49d10064566fc911';\r\nconst URL =  'https://api.openweathermap.org/data/2.5/weather?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getWeather(coords : ICoords): Promise<IDataPosition | undefined>{   \r\n  let result;\r\n    try {\r\n      await delay(3000);\r\n      const response = await fetch(`${URL}lat=${coords.lat}&lon=${coords.lon}&units=metric&APPID=${API_key}`);\r\n      const data = await response.json();\r\n      result = data;\r\n      return result;\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n}\r\n\r\n\r\n\r\n","import { IDataCity } from \"../models/dataCity.model\";\r\n\r\nconst API_key = '44b788430b6eae4f49d10064566fc911';\r\nconst URL =  'https://api.openweathermap.org/data/2.5/forecast?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getWet(city : string) :Promise<IDataCity | undefined>{   \r\n    let result;\r\n      try {\r\n        await delay(3000);\r\n        const response = await fetch(`${URL}q=${city}&units=metric&appid=${API_key}`);\r\n        const data = await response.json();\r\n        result = data;\r\n        return result\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n}\r\n\r\n","import { takeEvery, put, call, ForkEffect } from 'redux-saga/effects'\r\nimport { IDataCity } from '../../models/dataCity.model';\r\nimport IDataPosition from '../../models/dataPosition.model';\r\nimport getWeather from '../../services/requestCurrentWeather';\r\nimport getWet from '../../services/requestWeatherByCity';\r\nimport { \r\n    showFormLoader,\r\n    recordDataPosition,\r\n    hideFormLoader, \r\n    recordLastCity,\r\n    recordCity,\r\n    hideLoadingCards\r\n} from '../actions';\r\nimport { REQUEST_WEATHER } from '../types';\r\n\r\nexport function* sagaWatcher(): Generator<ForkEffect<never>, void, unknown> {\r\n    yield takeEvery(REQUEST_WEATHER, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker(action: any) {\r\n    try {\r\n        yield put(showFormLoader());\r\n        const position: IDataPosition = yield call(getWeather, action.payload);\r\n        if (position.cod === 200) {\r\n            yield put(recordDataPosition(position));\r\n            yield put(hideFormLoader());\r\n            yield put(recordLastCity(position.name));\r\n            const city: IDataCity = yield call(getWet, position.name);\r\n            yield put(recordCity(city));\r\n            yield put(hideLoadingCards());\r\n        } else {\r\n            console.log('Error');\r\n        }\r\n    } catch (error) {\r\n        yield console.log('Error behind promise!', error.message)\r\n    }\r\n}\r\n\r\n","import { takeEvery, put, call, ForkEffect } from 'redux-saga/effects'\r\nimport { ICoords } from '../../models/coords.model';\r\nimport { IDataCity } from '../../models/dataCity.model';\r\nimport IDataPosition from '../../models/dataPosition.model';\r\nimport getWeather from '../../services/requestCurrentWeather';\r\nimport getWet from '../../services/requestWeatherByCity';\r\nimport { \r\n    showFormLoader,\r\n    recordDataPosition,\r\n    hideFormLoader, \r\n    recordLastCity,\r\n    recordCity,\r\n    hideLoadingCards,\r\n    showLoadingCards,\r\n    recordLastCoords,\r\n    trueData,\r\n    falseData\r\n} from '../actions';\r\nimport { UPDATED_DATA } from '../types';\r\n\r\nexport function* updateDataWatcher(): Generator<ForkEffect<never>, void, unknown> {\r\n    yield takeEvery(UPDATED_DATA, updateWorker);\r\n}\r\n\r\nfunction* updateWorker(action: any) {\r\n    try {\r\n        yield put(showLoadingCards());\r\n        yield put(showFormLoader()); \r\n        const response: IDataCity = yield call(getWet, action.payload);\r\n        if (response.cod === String(200)) {\r\n            const updatedCoords: ICoords = response.city.coord;\r\n            yield put(recordLastCoords(updatedCoords));\r\n            yield put(recordLastCity(response.city.name));\r\n            const city: IDataPosition = yield call(getWeather, updatedCoords);\r\n            yield put(trueData());\r\n            yield put(recordDataPosition(city));\r\n            yield put(hideLoadingCards());\r\n            yield put(hideFormLoader()); \r\n            yield put(recordCity(response));\r\n        } else {\r\n            yield put(hideLoadingCards());\r\n            yield put(hideFormLoader());\r\n            yield put(falseData());\r\n            console.log('Error');\r\n        }\r\n    } catch (error) {\r\n        yield console.log('Error behind promise!', error.message)\r\n    }\r\n}","import { takeEvery, put, call, ForkEffect } from 'redux-saga/effects'\r\nimport { IDataCity } from '../../models/dataCity.model';\r\nimport getWet from '../../services/requestWeatherByCity';\r\nimport { \r\n    hideFormLoader, \r\n    recordCity,\r\n    hideLoadingCards,\r\n    falseData,\r\n    trueData,\r\n    showLoadingCards,\r\n} from '../actions';\r\nimport { UPDATE_WEATHER_CITY_CARDS } from '../types';\r\n\r\nexport function* updateCityCardsWatcher(): Generator<ForkEffect<never>, void, unknown> {\r\n    yield takeEvery(UPDATE_WEATHER_CITY_CARDS, updateCityWorker);\r\n}\r\n\r\nfunction* updateCityWorker(action: any) {\r\n    try {\r\n        yield put(showLoadingCards());\r\n        yield put(trueData());\r\n        const response: IDataCity = yield call(getWet, action.payload);\r\n        if (response.cod === String(200)) {\r\n            yield put(recordCity(response));\r\n            yield put(hideLoadingCards());  \r\n        } else {\r\n            yield put(hideLoadingCards());\r\n            yield put(hideFormLoader());\r\n            yield put(falseData());\r\n            console.log('Error');\r\n        }\r\n    } catch (error) {\r\n        yield console.log('Error behind promise!', error.message)\r\n    }\r\n}","import { ICoords } from \"../models/coords.model\";\r\nimport { IDataCity } from \"../models/dataCity.model\";\r\n\r\nconst API_key = '44b788430b6eae4f49d10064566fc911';\r\nconst URL =  'https://api.openweathermap.org/data/2.5/find?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getNearbyCities(coords : ICoords) :Promise<IDataCity | undefined>{\r\n    let result;\r\n      try {\r\n        await delay(3000);\r\n        const response = await fetch(`${URL}lat=${coords.lat}&lon=${coords.lon}&cnt=${9}&units=metric&appid=${API_key}`);\r\n        const data = await response.json();\r\n        result = data;\r\n        return result\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n}","import { takeEvery, put, call, ForkEffect } from 'redux-saga/effects'\r\nimport { IDataCity } from '../../models/dataCity.model';\r\nimport getNearbyCities from '../../services/requestNearbyCities';\r\nimport { \r\n    hideFormLoader, \r\n    recordCity,\r\n    hideLoadingCards,\r\n    falseData,\r\n    trueData,\r\n    showLoadingCards,\r\n} from '../actions';\r\nimport { UPDATE_WEATHER_NEARBY_CARDS } from '../types';\r\n\r\nexport function* updateNearbyCardsWatcher(): Generator<ForkEffect<never>, void, unknown> {\r\n    yield takeEvery(UPDATE_WEATHER_NEARBY_CARDS, updateNearbyWorker);\r\n}\r\n\r\nfunction* updateNearbyWorker(action: any) {\r\n    try {\r\n        yield put(showLoadingCards());\r\n        yield put(trueData());\r\n        const response: IDataCity = yield call(getNearbyCities, action.payload);\r\n        if (response.cod === String(200)) {\r\n            yield put(recordCity(response));\r\n            yield put(hideLoadingCards());  \r\n        } else {\r\n            yield put(hideLoadingCards());\r\n            yield put(hideFormLoader());\r\n            yield put(falseData());\r\n            console.log('Error');\r\n        }\r\n    } catch (error) {\r\n        yield console.log('Error behind promise!', error.message)\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport WebFont from \"webfontloader\";\n\nimport { createGlobalStyle } from 'styled-components';\n\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from './store/rootReducer';\nimport { sagaWatcher } from './store/sagas/firstLoadingSaga';\nimport { updateDataWatcher } from './store/sagas/updateDataSaga';\nimport { updateCityCardsWatcher } from './store/sagas/updateWeatherCardsCitySaga';\nimport { updateNearbyCardsWatcher } from './store/sagas/updateWeatherCardsNearbySaga';\n\n\nconst Global = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: border-box;\n}\n\n:focus,\n:active {\n  outline: none;\n}\n\na:focus,\na:active {\n  outline: none;\n}\n\nnav,\nheader,\nfooter,\naside {\n  display: block;\n}\n\nhtml,\nbody {\n  width: 100%;\n  font-size: 100%;\n  line-height: 1;\n  font-size: 14px;\n  text-size-adjust: 100%;\n  font-family: 'Inter', sans-serif;\n  margin: 0;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background:#edf5e1;\n  min-height: 100vh;\n}\n\ninput,\nbutton,\ntextarea {\n  font-family: inherit;\n}\n\ninput::-ms-clear {\n  display: none;\n}\n\nbutton {\n  cursor: pointer;\n}\n\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\na,\na:visited {\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: none;\n}\n\nul li {\n  list-style: none;\n}\n\nimg {\n  vertical-align: top;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: 400;\n}\n\n.done {\n    text-decoration: line-through;\n    color: #ccc;\n}\n`\n\nWebFont.load({\n  google: {\n    families: [\"Inter:wght@100;200;300;400;500;600;700;800;900&display=swap\"],\n  },\n});\n\nconst saga = createSagaMiddleware()\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(saga),\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n  ));\n\n  saga.run(sagaWatcher);\n  saga.run(updateDataWatcher);\n  saga.run(updateCityCardsWatcher);\n  saga.run(updateNearbyCardsWatcher);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <Global/>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}