[{"E:\\work\\React\\weather-redux-saga\\src\\index.tsx":"1","E:\\work\\React\\weather-redux-saga\\src\\reportWebVitals.ts":"2","E:\\work\\React\\weather-redux-saga\\src\\App.tsx":"3","E:\\work\\React\\weather-redux-saga\\src\\store\\rootReducer.tsx":"4","E:\\work\\React\\weather-redux-saga\\src\\store\\sagas\\updateDataSaga.tsx":"5","E:\\work\\React\\weather-redux-saga\\src\\store\\sagas\\updateWeatherCardsCitySaga.tsx":"6","E:\\work\\React\\weather-redux-saga\\src\\store\\sagas\\firstLoadingSaga.tsx":"7","E:\\work\\React\\weather-redux-saga\\src\\store\\sagas\\updateWeatherCardsNearbySaga.tsx":"8","E:\\work\\React\\weather-redux-saga\\src\\store\\types.tsx":"9","E:\\work\\React\\weather-redux-saga\\src\\store\\actions.tsx":"10","E:\\work\\React\\weather-redux-saga\\src\\store\\weatherReducer.tsx":"11","E:\\work\\React\\weather-redux-saga\\src\\services\\requestCurrentWeather.tsx":"12","E:\\work\\React\\weather-redux-saga\\src\\services\\requestWeatherByCity.tsx":"13","E:\\work\\React\\weather-redux-saga\\src\\services\\requestNearbyCities.tsx":"14","E:\\work\\React\\weather-redux-saga\\src\\components\\404\\index.tsx":"15","E:\\work\\React\\weather-redux-saga\\src\\components\\main\\index.tsx":"16","E:\\work\\React\\weather-redux-saga\\src\\hooks\\useCurrentLocation.tsx":"17","E:\\work\\React\\weather-redux-saga\\src\\constant\\option.tsx":"18","E:\\work\\React\\weather-redux-saga\\src\\constant\\quantityOfDots.tsx":"19","E:\\work\\React\\weather-redux-saga\\src\\constant\\defaultCoords.tsx":"20","E:\\work\\React\\weather-redux-saga\\src\\components\\dots\\index.tsx":"21","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\index.tsx":"22","E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\index.tsx":"23","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\index.tsx":"24","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\header\\index.tsx":"25","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\search\\index.tsx":"26","E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastHeader\\index.tsx":"27","E:\\work\\React\\weather-redux-saga\\src\\components\\spinner\\index.tsx":"28","E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\index.tsx":"29","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__header\\index.tsx":"30","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\index.tsx":"31","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\search\\searchBox\\index.tsx":"32","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\search\\radioBox\\index.tsx":"33","E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\index.tsx":"34","E:\\work\\React\\weather-redux-saga\\src\\components\\loader\\index.tsx":"35","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\index.tsx":"36","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\ImageField\\index.tsx":"37","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\TemperatuteField\\index.tsx":"38","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\search\\radioBox\\radioItems\\index.tsx":"39","E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\cityField\\index.tsx":"40","E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\imageField\\index.tsx":"41","E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dateField\\index.tsx":"42","E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dataListField\\index.tsx":"43","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\descriptionListItem\\index.tsx":"44","E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dataListField\\dataListFieldItem\\index.tsx":"45"},{"size":2563,"mtime":1619760783992,"results":"46","hashOfConfig":"47"},{"size":425,"mtime":499162500000,"results":"48","hashOfConfig":"47"},{"size":478,"mtime":1619760815848,"results":"49","hashOfConfig":"47"},{"size":233,"mtime":1614863149974,"results":"50","hashOfConfig":"47"},{"size":1803,"mtime":1619765355923,"results":"51","hashOfConfig":"47"},{"size":1177,"mtime":1619765613659,"results":"52","hashOfConfig":"47"},{"size":1336,"mtime":1619765558370,"results":"53","hashOfConfig":"47"},{"size":1204,"mtime":1619765615003,"results":"54","hashOfConfig":"47"},{"size":2906,"mtime":1614934776203,"results":"55","hashOfConfig":"47"},{"size":2678,"mtime":1614934854492,"results":"56","hashOfConfig":"47"},{"size":2718,"mtime":1619765019465,"results":"57","hashOfConfig":"47"},{"size":763,"mtime":1619763487325,"results":"58","hashOfConfig":"47"},{"size":687,"mtime":1619763574773,"results":"59","hashOfConfig":"47"},{"size":774,"mtime":1619763596226,"results":"60","hashOfConfig":"47"},{"size":1108,"mtime":1619759402951,"results":"61","hashOfConfig":"47"},{"size":1922,"mtime":1619766426624,"results":"62","hashOfConfig":"47"},{"size":994,"mtime":1619765262508,"results":"63","hashOfConfig":"47"},{"size":262,"mtime":1612180852744,"results":"64","hashOfConfig":"47"},{"size":176,"mtime":1612179305493,"results":"65","hashOfConfig":"47"},{"size":142,"mtime":1612361182253,"results":"66","hashOfConfig":"47"},{"size":4343,"mtime":1619762769778,"results":"67","hashOfConfig":"47"},{"size":1115,"mtime":1619766089824,"results":"68","hashOfConfig":"47"},{"size":532,"mtime":1619766147641,"results":"69","hashOfConfig":"47"},{"size":474,"mtime":1619762431725,"results":"70","hashOfConfig":"47"},{"size":811,"mtime":1619761852269,"results":"71","hashOfConfig":"47"},{"size":2487,"mtime":1619765086375,"results":"72","hashOfConfig":"47"},{"size":1020,"mtime":1619765190061,"results":"73","hashOfConfig":"47"},{"size":978,"mtime":1619763386257,"results":"74","hashOfConfig":"47"},{"size":1463,"mtime":1619767697509,"results":"75","hashOfConfig":"47"},{"size":732,"mtime":1619765148671,"results":"76","hashOfConfig":"47"},{"size":753,"mtime":1619762684275,"results":"77","hashOfConfig":"47"},{"size":1297,"mtime":1619762340355,"results":"78","hashOfConfig":"47"},{"size":606,"mtime":1619762143750,"results":"79","hashOfConfig":"47"},{"size":2052,"mtime":1619763347504,"results":"80","hashOfConfig":"47"},{"size":1607,"mtime":1619763367109,"results":"81","hashOfConfig":"47"},{"size":2549,"mtime":1619765450725,"results":"82","hashOfConfig":"47"},{"size":868,"mtime":1619762524632,"results":"83","hashOfConfig":"47"},{"size":611,"mtime":1619762491780,"results":"84","hashOfConfig":"47"},{"size":1708,"mtime":1619762356629,"results":"85","hashOfConfig":"47"},{"size":395,"mtime":1619763344556,"results":"86","hashOfConfig":"47"},{"size":716,"mtime":1619763166965,"results":"87","hashOfConfig":"47"},{"size":520,"mtime":1619763268033,"results":"88","hashOfConfig":"47"},{"size":1366,"mtime":1619763318240,"results":"89","hashOfConfig":"47"},{"size":2614,"mtime":1619762704523,"results":"90","hashOfConfig":"47"},{"size":1477,"mtime":1619763315228,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},"1t1nyio",{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"95"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"95"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"95"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"95"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"95"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"95"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"95"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"E:\\work\\React\\weather-redux-saga\\src\\index.tsx",["194"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport WebFont from \"webfontloader\";\n\nimport { createGlobalStyle } from 'styled-components';\n\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from './store/rootReducer';\nimport { sagaWatcher } from './store/sagas/firstLoadingSaga';\nimport { updateDataWatcher } from './store/sagas/updateDataSaga';\nimport { updateCityCardsWatcher } from './store/sagas/updateWeatherCardsCitySaga';\nimport { updateNearbyCardsWatcher } from './store/sagas/updateWeatherCardsNearbySaga';\n\n\nconst Global = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: border-box;\n}\n\n:focus,\n:active {\n  outline: none;\n}\n\na:focus,\na:active {\n  outline: none;\n}\n\nnav,\nheader,\nfooter,\naside {\n  display: block;\n}\n\nhtml,\nbody {\n  width: 100%;\n  font-size: 100%;\n  line-height: 1;\n  font-size: 14px;\n  text-size-adjust: 100%;\n  font-family: 'Inter', sans-serif;\n  margin: 0;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background:#edf5e1;\n  min-height: 100vh;\n}\n\ninput,\nbutton,\ntextarea {\n  font-family: inherit;\n}\n\ninput::-ms-clear {\n  display: none;\n}\n\nbutton {\n  cursor: pointer;\n}\n\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\na,\na:visited {\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: none;\n}\n\nul li {\n  list-style: none;\n}\n\nimg {\n  vertical-align: top;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: 400;\n}\n\n.done {\n    text-decoration: line-through;\n    color: #ccc;\n}\n`\n\nWebFont.load({\n  google: {\n    families: [\"Inter:wght@100;200;300;400;500;600;700;800;900&display=swap\"],\n  },\n});\n\nconst saga = createSagaMiddleware()\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(saga),\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n  ));\n\n  saga.run(sagaWatcher);\n  saga.run(updateDataWatcher);\n  saga.run(updateCityCardsWatcher);\n  saga.run(updateNearbyCardsWatcher);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <Global/>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",[],"E:\\work\\React\\weather-redux-saga\\src\\reportWebVitals.ts",["195"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","E:\\work\\React\\weather-redux-saga\\src\\App.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\store\\rootReducer.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\store\\sagas\\updateDataSaga.tsx",["196"],"import { takeEvery, put, call, ForkEffect } from 'redux-saga/effects'\r\nimport { ICoords } from '../../models/coords.model';\r\nimport { IDataCity } from '../../models/dataCity.model';\r\nimport IDataPosition from '../../models/dataPosition.model';\r\nimport getWeather from '../../services/requestCurrentWeather';\r\nimport getWet from '../../services/requestWeatherByCity';\r\nimport { \r\n    showFormLoader,\r\n    recordDataPosition,\r\n    hideFormLoader, \r\n    recordLastCity,\r\n    recordCity,\r\n    hideLoadingCards,\r\n    showLoadingCards,\r\n    recordLastCoords,\r\n    trueData,\r\n    falseData\r\n} from '../actions';\r\nimport { UPDATED_DATA } from '../types';\r\n\r\nexport function* updateDataWatcher(): Generator<ForkEffect<never>, void, unknown> {\r\n    yield takeEvery(UPDATED_DATA, updateWorker);\r\n}\r\n\r\nfunction* updateWorker(action: any) {\r\n    try {\r\n        yield put(showLoadingCards());\r\n        yield put(showFormLoader()); \r\n        const response: IDataCity = yield call(getWet, action.payload);\r\n        if (response.cod === String(200)) {\r\n            const updatedCoords: ICoords = response.city.coord;\r\n            yield put(recordLastCoords(updatedCoords));\r\n            yield put(recordLastCity(response.city.name));\r\n            const city: IDataPosition = yield call(getWeather, updatedCoords);\r\n            yield put(trueData());\r\n            yield put(recordDataPosition(city));\r\n            yield put(hideLoadingCards());\r\n            yield put(hideFormLoader()); \r\n            yield put(recordCity(response));\r\n        } else {\r\n            yield put(hideLoadingCards());\r\n            yield put(hideFormLoader());\r\n            yield put(falseData());\r\n            console.log('Error');\r\n        }\r\n    } catch (error) {\r\n        yield console.log('Error behind promise!', error.message)\r\n    }\r\n}","E:\\work\\React\\weather-redux-saga\\src\\store\\sagas\\updateWeatherCardsCitySaga.tsx",["197"],"import { takeEvery, put, call, ForkEffect } from 'redux-saga/effects'\r\nimport { IDataCity } from '../../models/dataCity.model';\r\nimport getWet from '../../services/requestWeatherByCity';\r\nimport { \r\n    hideFormLoader, \r\n    recordCity,\r\n    hideLoadingCards,\r\n    falseData,\r\n    trueData,\r\n    showLoadingCards,\r\n} from '../actions';\r\nimport { UPDATE_WEATHER_CITY_CARDS } from '../types';\r\n\r\nexport function* updateCityCardsWatcher(): Generator<ForkEffect<never>, void, unknown> {\r\n    yield takeEvery(UPDATE_WEATHER_CITY_CARDS, updateCityWorker);\r\n}\r\n\r\nfunction* updateCityWorker(action: any) {\r\n    try {\r\n        yield put(showLoadingCards());\r\n        yield put(trueData());\r\n        const response: IDataCity = yield call(getWet, action.payload);\r\n        if (response.cod === String(200)) {\r\n            yield put(recordCity(response));\r\n            yield put(hideLoadingCards());  \r\n        } else {\r\n            yield put(hideLoadingCards());\r\n            yield put(hideFormLoader());\r\n            yield put(falseData());\r\n            console.log('Error');\r\n        }\r\n    } catch (error) {\r\n        yield console.log('Error behind promise!', error.message)\r\n    }\r\n}","E:\\work\\React\\weather-redux-saga\\src\\store\\sagas\\firstLoadingSaga.tsx",["198"],"import { takeEvery, put, call, ForkEffect } from 'redux-saga/effects'\r\nimport { IDataCity } from '../../models/dataCity.model';\r\nimport IDataPosition from '../../models/dataPosition.model';\r\nimport getWeather from '../../services/requestCurrentWeather';\r\nimport getWet from '../../services/requestWeatherByCity';\r\nimport { \r\n    showFormLoader,\r\n    recordDataPosition,\r\n    hideFormLoader, \r\n    recordLastCity,\r\n    recordCity,\r\n    hideLoadingCards\r\n} from '../actions';\r\nimport { REQUEST_WEATHER } from '../types';\r\n\r\nexport function* sagaWatcher(): Generator<ForkEffect<never>, void, unknown> {\r\n    yield takeEvery(REQUEST_WEATHER, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker(action: any) {\r\n    try {\r\n        yield put(showFormLoader());\r\n        const position: IDataPosition = yield call(getWeather, action.payload);\r\n        if (position.cod === 200) {\r\n            yield put(recordDataPosition(position));\r\n            yield put(hideFormLoader());\r\n            yield put(recordLastCity(position.name));\r\n            const city: IDataCity = yield call(getWet, position.name);\r\n            yield put(recordCity(city));\r\n            yield put(hideLoadingCards());\r\n        } else {\r\n            console.log('Error');\r\n        }\r\n    } catch (error) {\r\n        yield console.log('Error behind promise!', error.message)\r\n    }\r\n}\r\n\r\n","E:\\work\\React\\weather-redux-saga\\src\\store\\sagas\\updateWeatherCardsNearbySaga.tsx",["199"],"import { takeEvery, put, call, ForkEffect } from 'redux-saga/effects'\r\nimport { IDataCity } from '../../models/dataCity.model';\r\nimport getNearbyCities from '../../services/requestNearbyCities';\r\nimport { \r\n    hideFormLoader, \r\n    recordCity,\r\n    hideLoadingCards,\r\n    falseData,\r\n    trueData,\r\n    showLoadingCards,\r\n} from '../actions';\r\nimport { UPDATE_WEATHER_NEARBY_CARDS } from '../types';\r\n\r\nexport function* updateNearbyCardsWatcher(): Generator<ForkEffect<never>, void, unknown> {\r\n    yield takeEvery(UPDATE_WEATHER_NEARBY_CARDS, updateNearbyWorker);\r\n}\r\n\r\nfunction* updateNearbyWorker(action: any) {\r\n    try {\r\n        yield put(showLoadingCards());\r\n        yield put(trueData());\r\n        const response: IDataCity = yield call(getNearbyCities, action.payload);\r\n        if (response.cod === String(200)) {\r\n            yield put(recordCity(response));\r\n            yield put(hideLoadingCards());  \r\n        } else {\r\n            yield put(hideLoadingCards());\r\n            yield put(hideFormLoader());\r\n            yield put(falseData());\r\n            console.log('Error');\r\n        }\r\n    } catch (error) {\r\n        yield console.log('Error behind promise!', error.message)\r\n    }\r\n}","E:\\work\\React\\weather-redux-saga\\src\\store\\types.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\store\\actions.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\store\\weatherReducer.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\services\\requestCurrentWeather.tsx",["200"],"import { ICoords } from \"../models/coords.model\";\r\nimport IDataPosition from \"../models/dataPosition.model\";\r\n\r\nconst API_key = '44b788430b6eae4f49d10064566fc911';\r\nconst URL =  'https://api.openweathermap.org/data/2.5/weather?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getWeather(coords : ICoords): Promise<IDataPosition | undefined>{   \r\n  let result;\r\n    try {\r\n      await delay(3000);\r\n      const response = await fetch(`${URL}lat=${coords.lat}&lon=${coords.lon}&units=metric&APPID=${API_key}`);\r\n      const data = await response.json();\r\n      result = data;\r\n      return result;\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n}\r\n\r\n\r\n\r\n","E:\\work\\React\\weather-redux-saga\\src\\services\\requestWeatherByCity.tsx",["201"],"import { IDataCity } from \"../models/dataCity.model\";\r\n\r\nconst API_key = '44b788430b6eae4f49d10064566fc911';\r\nconst URL =  'https://api.openweathermap.org/data/2.5/forecast?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getWet(city : string) :Promise<IDataCity | undefined>{   \r\n    let result;\r\n      try {\r\n        await delay(3000);\r\n        const response = await fetch(`${URL}q=${city}&units=metric&appid=${API_key}`);\r\n        const data = await response.json();\r\n        result = data;\r\n        return result\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n}\r\n\r\n","E:\\work\\React\\weather-redux-saga\\src\\services\\requestNearbyCities.tsx",["202"],"import { ICoords } from \"../models/coords.model\";\r\nimport { IDataCity } from \"../models/dataCity.model\";\r\n\r\nconst API_key = '44b788430b6eae4f49d10064566fc911';\r\nconst URL =  'https://api.openweathermap.org/data/2.5/find?';\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise((resolve: any) => setTimeout(() => resolve(), ms));\r\n};\r\n\r\nexport default async function getNearbyCities(coords : ICoords) :Promise<IDataCity | undefined>{\r\n    let result;\r\n      try {\r\n        await delay(3000);\r\n        const response = await fetch(`${URL}lat=${coords.lat}&lon=${coords.lon}&cnt=${9}&units=metric&appid=${API_key}`);\r\n        const data = await response.json();\r\n        result = data;\r\n        return result\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n}","E:\\work\\React\\weather-redux-saga\\src\\components\\404\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\main\\index.tsx",["203"],"import React, { useEffect, useMemo } from 'react';\nimport useCurrentLocation from '../../hooks/useCurrentLocation';\n\nimport { CurrentWeather } from '../currentWeather';\nimport { Dots } from '../dots';\nimport { HourlyForecast } from '../hourlyForecast';\n\n\nimport { geolocationOptions } from \"../../constant/option\";\nimport { defaultCoords } from \"../../constant/defaultCoords\";\nimport { dots } from '../../constant/quantityOfDots'\n\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { loadCurrentWeather, recordLastCoords } from '../../store/actions';\n\n\nexport const MainPage: React.FC = () => {\n  const { location: currentLocation, error: currentError } = useCurrentLocation(geolocationOptions);\n  const dispatch = useDispatch();\n\n\n  const targetLoaction = useMemo(() => {\n    return currentLocation ?? defaultCoords;\n  }, [currentLocation]);\n\n  useEffect(() => {\n      dispatch(loadCurrentWeather(targetLoaction));\n      dispatch(recordLastCoords(targetLoaction));\n  }, [dispatch, targetLoaction]);\n\n  return (\n      <Wrapper>\n        <Background>\n          {dots().map((item: number) => <Dots key={item} />)}\n        </Background>\n        <Container>\n          <HourlyForecast />\n          <CurrentWeather />\n        </Container>\n      </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\nposition: relative;\n`;\n\nconst Background = styled.div`\nwidth: 100vw;\nheight: 100vh;\nbackground: #48484a;\nz-index: 1;\n`;\n\nconst Container = styled.div`\nposition: absolute;\ntop: 0;\nleft: 0;\nwidth: 100vw;\nheight: 100vh;\ndisplay: grid;\ngrid-template-columns: 72% 28%;\ngrid-template-rows: 1fr;\noverflow-y: scroll;\n\n@media screen and (max-width: 1200px) {\n  grid-template-columns: 1fr;\n  grid-template-rows: 680px 680px;\n}\n\n@media screen and (min-width: 440px) and (max-width: 650px) {\n  grid-template-rows: 1200px 680px;\n}\n\n@media screen and(max-width: 440px) {\n  grid-template-rows: 1838px 680px;\n}\n`;\n","E:\\work\\React\\weather-redux-saga\\src\\hooks\\useCurrentLocation.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\constant\\option.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\constant\\quantityOfDots.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\constant\\defaultCoords.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\dots\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\header\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\search\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastHeader\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\spinner\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__header\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\search\\searchBox\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\search\\radioBox\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\loader\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\index.tsx",["204","205","206","207","208"],"import React from 'react';\r\nimport { DescriptionListItem } from './descriptionListItem';\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../../store/rootReducer';\r\n\r\ntype TitleProps = {\r\n    title: string\r\n}\r\n\r\ntype ArrayKey = [string, number]\r\n\r\nexport const DescriptionList: React.FC<TitleProps> = ({ title }: TitleProps) => {\r\n    const dataPosition = useSelector((state: RootState) => state.weather.dataPosition);\r\n\r\n    let temperatureArray: any = [];\r\n    let sunArray: any = [];\r\n    let windArray: any = [];\r\n    let visibilityArray: any = [];\r\n    let cloudArray: any = [];\r\n\r\n    if (dataPosition) {\r\n        switch (title) {\r\n            case 'Temperature parameters':\r\n                temperatureArray = Object.entries(dataPosition.main).filter((item) => item[0] !== 'temp' && item[0] !== 'sea_level' && item[0] !== 'grnd_level' && item[0] !== 'pressure');\r\n                break;\r\n            case 'Sunrise & Sunset data':\r\n                sunArray = Object.entries(dataPosition.sys).filter((item) => item[0] !== 'country' && item[0] !== 'id' && item[0] !== 'type');\r\n                break;\r\n            case 'Visibility':\r\n                visibilityArray = Object.entries(dataPosition).filter((item) => item[0] === 'visibility');\r\n                break;\r\n            case 'Wind':\r\n                windArray = Object.entries(dataPosition.wind).filter((item) => item[0] !== 'gust');\r\n                break;\r\n            case 'Cloudiness':\r\n                cloudArray = Object.entries(dataPosition.clouds)\r\n                break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <List>\r\n            <Title>{title}</Title>\r\n            {temperatureArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n            {sunArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n            {visibilityArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n            {windArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n            {cloudArray?.map((item: ArrayKey, index: number) => <DescriptionListItem key={index} value={item} />)}\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nconst List = styled.ul`\r\ndisplay: grid;\r\ngrid-column: 100%;\r\ngrid-template-rows: min-content;\r\ngrid-gap: 5px;\r\n`;\r\n\r\nconst Title = styled.li`\r\ntext-align: center;\r\nfont-weight: 500;\r\nfont-size: 1.2rem;\r\ncolor: #171730;\r\n`;\r\n","E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\ImageField\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\TemperatuteField\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\search\\radioBox\\radioItems\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\cityField\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\imageField\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dateField\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dataListField\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\currentWeather\\description\\description__card\\descriptionList\\descriptionListItem\\index.tsx",[],"E:\\work\\React\\weather-redux-saga\\src\\components\\hourlyForecast\\forecastList\\forecastListItem\\dataListField\\dataListFieldItem\\index.tsx",[],{"ruleId":"209","severity":1,"message":"210","line":128,"column":14,"nodeType":"211","messageId":"212","endLine":128,"endColumn":17,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":3,"column":25,"nodeType":"216","messageId":"217","endLine":3,"endColumn":57},{"ruleId":"209","severity":1,"message":"210","line":25,"column":32,"nodeType":"211","messageId":"212","endLine":25,"endColumn":35,"suggestions":"218"},{"ruleId":"209","severity":1,"message":"210","line":18,"column":36,"nodeType":"211","messageId":"212","endLine":18,"endColumn":39,"suggestions":"219"},{"ruleId":"209","severity":1,"message":"210","line":20,"column":30,"nodeType":"211","messageId":"212","endLine":20,"endColumn":33,"suggestions":"220"},{"ruleId":"209","severity":1,"message":"210","line":18,"column":38,"nodeType":"211","messageId":"212","endLine":18,"endColumn":41,"suggestions":"221"},{"ruleId":"209","severity":1,"message":"210","line":8,"column":32,"nodeType":"211","messageId":"212","endLine":8,"endColumn":35,"suggestions":"222"},{"ruleId":"209","severity":1,"message":"210","line":7,"column":32,"nodeType":"211","messageId":"212","endLine":7,"endColumn":35,"suggestions":"223"},{"ruleId":"209","severity":1,"message":"210","line":8,"column":32,"nodeType":"211","messageId":"212","endLine":8,"endColumn":35,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":19,"column":45,"nodeType":"227","messageId":"228","endLine":19,"endColumn":57},{"ruleId":"209","severity":1,"message":"210","line":16,"column":27,"nodeType":"211","messageId":"212","endLine":16,"endColumn":30,"suggestions":"229"},{"ruleId":"209","severity":1,"message":"210","line":17,"column":19,"nodeType":"211","messageId":"212","endLine":17,"endColumn":22,"suggestions":"230"},{"ruleId":"209","severity":1,"message":"210","line":18,"column":20,"nodeType":"211","messageId":"212","endLine":18,"endColumn":23,"suggestions":"231"},{"ruleId":"209","severity":1,"message":"210","line":19,"column":26,"nodeType":"211","messageId":"212","endLine":19,"endColumn":29,"suggestions":"232"},{"ruleId":"209","severity":1,"message":"210","line":20,"column":21,"nodeType":"211","messageId":"212","endLine":20,"endColumn":24,"suggestions":"233"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["234","235"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["236","237"],["238","239"],["240","241"],["242","243"],["244","245"],["246","247"],["248","249"],"@typescript-eslint/no-unused-vars","'currentError' is assigned a value but never used.","Identifier","unusedVar",["250","251"],["252","253"],["254","255"],["256","257"],["258","259"],{"messageId":"260","fix":"261","desc":"262"},{"messageId":"263","fix":"264","desc":"265"},{"messageId":"260","fix":"266","desc":"262"},{"messageId":"263","fix":"267","desc":"265"},{"messageId":"260","fix":"268","desc":"262"},{"messageId":"263","fix":"269","desc":"265"},{"messageId":"260","fix":"270","desc":"262"},{"messageId":"263","fix":"271","desc":"265"},{"messageId":"260","fix":"272","desc":"262"},{"messageId":"263","fix":"273","desc":"265"},{"messageId":"260","fix":"274","desc":"262"},{"messageId":"263","fix":"275","desc":"265"},{"messageId":"260","fix":"276","desc":"262"},{"messageId":"263","fix":"277","desc":"265"},{"messageId":"260","fix":"278","desc":"262"},{"messageId":"263","fix":"279","desc":"265"},{"messageId":"260","fix":"280","desc":"262"},{"messageId":"263","fix":"281","desc":"265"},{"messageId":"260","fix":"282","desc":"262"},{"messageId":"263","fix":"283","desc":"265"},{"messageId":"260","fix":"284","desc":"262"},{"messageId":"263","fix":"285","desc":"265"},{"messageId":"260","fix":"286","desc":"262"},{"messageId":"263","fix":"287","desc":"265"},{"messageId":"260","fix":"288","desc":"262"},{"messageId":"263","fix":"289","desc":"265"},"suggestUnknown",{"range":"290","text":"291"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"290","text":"292"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"293","text":"291"},{"range":"293","text":"292"},{"range":"294","text":"291"},{"range":"294","text":"292"},{"range":"295","text":"291"},{"range":"295","text":"292"},{"range":"296","text":"291"},{"range":"296","text":"292"},{"range":"297","text":"291"},{"range":"297","text":"292"},{"range":"298","text":"291"},{"range":"298","text":"292"},{"range":"299","text":"291"},{"range":"299","text":"292"},{"range":"300","text":"291"},{"range":"300","text":"292"},{"range":"301","text":"291"},{"range":"301","text":"292"},{"range":"302","text":"291"},{"range":"302","text":"292"},{"range":"303","text":"291"},{"range":"303","text":"292"},{"range":"304","text":"291"},{"range":"304","text":"292"},[1981,1984],"unknown","never",[821,824],[591,594],[686,689],[609,612],[297,300],[243,246],[290,293],[521,524],[550,553],[580,583],[616,619],[647,650]]